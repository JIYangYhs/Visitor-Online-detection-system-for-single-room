
version: '3.6'

networks:
  default:
    driver: bridge
    ipam:
      driver: default
  nextcloud:
    driver: bridge
    internal: true
    ipam:
      driver: default

services:
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    user: "0"
    ports:
    - "3000:3000"
    environment:
    - TZ=Etc/UTC
    - GF_PATHS_DATA=/var/lib/grafana
    - GF_PATHS_LOGS=/var/log/grafana
    - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
    - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
    - ./volumes/grafana/data:/var/lib/grafana
    - ./volumes/grafana/log:/var/log/grafana
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  home_assistant:
    container_name: home_assistant
    image: ghcr.io/home-assistant/home-assistant:stable
    restart: unless-stopped
    network_mode: host
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - ./volumes/home_assistant:/config
    - ./volumes/home_assistant/www:/media
    privileged: true
  influxdb2:
    container_name: influxdb2
    image: "influxdb:latest"
    restart: unless-stopped
    environment:
    - TZ=Etc/UTC
    - DOCKER_INFLUXDB_INIT_USERNAME=me
    - DOCKER_INFLUXDB_INIT_PASSWORD=mypassword
    - DOCKER_INFLUXDB_INIT_ORG=myorg
    - DOCKER_INFLUXDB_INIT_BUCKET=mybucket
    - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
    - DOCKER_INFLUXDB_INIT_MODE=setup
  # - DOCKER_INFLUXDB_INIT_MODE=upgrade
    ports:
    - "8087:8086"
    volumes:
    - ./volumes/influxdb2/data:/var/lib/influxdb2
    - ./volumes/influxdb2/config:/etc/influxdb2
    - ./volumes/influxdb2/backup:/var/lib/backup
  # - ./volumes/influxdb.migrate/data:/var/lib/influxdb:ro
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  mosquitto:
    container_name: mosquitto
    build:
      context: ./.templates/mosquitto/.
      args:
      - MOSQUITTO_BASE=eclipse-mosquitto:latest
    restart: unless-stopped
    environment:
    - TZ=${TZ:-Etc/UTC}
    ports:
    - "1883:1883"
    volumes:
    - ./volumes/mosquitto/config:/mosquitto/config
    - ./volumes/mosquitto/data:/mosquitto/data
    - ./volumes/mosquitto/log:/mosquitto/log
    - ./volumes/mosquitto/pwfile:/mosquitto/pwfile

  nodered:
    container_name: nodered
    build:
      context: ./services/nodered/.
      args:
      - DOCKERHUB_TAG=latest
      - EXTRA_PACKAGES=
    restart: unless-stopped
    user: "0"
    environment:
    - TZ=${TZ:-Etc/UTC}
    ports:
    - "1880:1880"
    volumes:
    - ./volumes/nodered/data:/data
    - ./volumes/nodered/ssh:/root/.ssh
  portainer-ce:
    container_name: portainer-ce
    image: portainer/portainer-ce
    restart: unless-stopped
    ports:
    - "8000:8000"
    - "9000:9000"
    # HTTPS
    - "9443:9443"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./volumes/portainer-ce/data:/data

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest
    environment:
    - TZ=${TZ:-Etc/UTC}
    - ZIGBEE2MQTT_CONFIG_MQTT_SERVER=mqtt://mosquitto:1883
    - ZIGBEE2MQTT_CONFIG_FRONTEND=true
    - ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_SYMLINK_CURRENT=true
    # - DEBUG=zigbee-herdsman*
    ports:
    - "8080:8080"
    volumes:
    - ./volumes/zigbee2mqtt/data:/app/data
    devices:
    - "${ZIGBEE2MQTT_DEVICE_PATH:?eg echo ZIGBEE2MQTT_DEVICE_PATH=/dev/ttyACM0 >>~/IOTstack/.env}:/dev/ttyACM0"
    restart: unless-stopped
    depends_on:
    - mosquitto

  zigbee2mqtt_assistant:
    container_name: zigbee2mqtt_assistant
    image: carldebilly/zigbee2mqttassistant
    restart: unless-stopped
    ports:
    - "8880:80"
    environment:
    - VIRTUAL_HOST=~^zigbee2mqtt_assistant\..*\.xip\.io
    - Z2MA_SETTINGS__MQTTSERVER=mosquitto
    - VIRTUAL_PORT=8880

  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    environment:
    - TZ=${TZ:-Etc/UTC}
    - POSTGRES_USER=${POSTGRES_USER:-postuser}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-IOtSt4ckpostgresDbPw}
    - POSTGRES_DB=${POSTGRES_DB:-postdb}
    ports:
    - "5432:5432"
    volumes:
    - ./volumes/postgres/data:/var/lib/postgresql/data
    - ./volumes/postgres/db_backup:/backup

  pgadmin4:
    container_name: pgadmin4
    image: gpongelli/pgadmin4-arm:latest-armv7
    platform: linux/arm/v7
  # image: gpongelli/pgadmin4-arm:latest-armv8
    restart: unless-stopped
    environment:
    - TZ=${TZ:-Etc/UTC}
    ports:
    - "5050:5050"
    volumes:
    - ./volumes/pgadmin4:/pgadmin4

version: "2"
services:
  motioneye:
    image: ccrisan/motioneye:master-armhf
    container_name: motioneye
    volumes:
      - /etc/localtime:/etc/localtime:ro #Timezone Config / Do Not Change
      - /etc/motioneye:/etc/motioneye #Config Storage
      - /var/lib/motioneye:/var/lib/motioneye  #File Storage
    devices:
      - /dev/video0
    ports:
      - 8765:8765
    restart: unless-stopped
